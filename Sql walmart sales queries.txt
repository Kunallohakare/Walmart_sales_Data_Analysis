-- Create database
CREATE DATABASE IF NOT EXISTS walmartSales;


-- Create table
CREATE TABLE IF NOT EXISTS sales(
	invoice_id VARCHAR(30) NOT NULL PRIMARY KEY,
    branch VARCHAR(5) NOT NULL,
    city VARCHAR(30) NOT NULL,
    customer_type VARCHAR(30) NOT NULL,
    gender VARCHAR(30) NOT NULL,
    product_line VARCHAR(100) NOT NULL,
    unit_price DECIMAL(10,2) NOT NULL,
    quantity INT NOT NULL,
    tax_pct FLOAT(6,4) NOT NULL,
    total DECIMAL(12, 4) NOT NULL,
    date DATETIME NOT NULL,
    time TIME NOT NULL,
    payment VARCHAR(15) NOT NULL,
    cogs DECIMAL(10,2) NOT NULL,
    gross_margin_pct FLOAT(11,9),
    gross_income DECIMAL(12, 4),
    rating FLOAT(2, 1)
);




SELECT
	time,
	(CASE
		WHEN `time` BETWEEN "00:00:00" AND "12:00:00" THEN "Morning"
        WHEN `time`BETWEEN "12:01:00" AND "16:00:00" THEN "Afternoon"
        ELSE "Evening"
    END) AS time_of_day
FROM sales;


-- ADD   Column in sales table 

ALTER TABLE  sales ADD column time_of_day varchar(30);




-- update that column in sales table 

UPDATE sales
SET time_of_day=(CASE
		WHEN `time` BETWEEN "00:00:00" AND "12:00:00" THEN "Morning"
        WHEN `time`BETWEEN "12:01:00" AND "16:00:00" THEN "Afternoon"
        ELSE "Evening"
    END);
    
    
    
    
    -- day name 
    
    select date,
    dayname(date) as day_name
    from sales;
    
    
    -- add column
    
			ALTER TABLE sales ADD COLUMN day_name VARCHAR(20);
            
            
-- uPDATE DAY_NAME COLUMN


UPDATE sales
SET  day_name = dayname(date);



--  month name


select date,
monthname(date) as month_name
 from sales;
            
-- add month colume

ALTER TABLE sales add column month_name varchar(20);


-- update column month name 

UPDATE	sales
set  month_name =monthname(date);


-- -----------------------------------------------------------------------------
-- --------------------- Generic -----------------------------------------------

-- How many unique cities does the data have?

select distinct city
from sales;

--  In which city is each branch?

select distinct  city ,branch
from sales;

-- ----------------------------------------------------
-- --------------- Product -------------------------------

-- How many unique product lines does the data have?

select count(distinct product_line)

from sales ;

-- --------------------------------------------------------
 -- What is the most selling product line
 
 select sum(quantity) as qty ,count(product_line),product_line
 from sales
 group by product_line
 order by qty desc;
 
 
 -- -------------------------------------------------------------
--  What is the total revenue by month

select month_name as month ,sum(total) as total_revenue
from sales
group by month_name
order by total_revenue;


--  -------------------------------------------------------------
--  
-- What month had the largest COGS?alter

select month_name as month, sum(cogs) as maximum
from sales
group by month_name
order by maximum;

-- ------------------------------------------------------------------
--  What product line had the largest revenue?

select  product_line as pl, sum(total) as revenue
from sales
group by product_line
order by revenue
;

-- ----------------------------------------------------------------
-- -- What is the city with the largest revenue?

select city ,branch , sum(total) as largest_revenue
from sales
group by city, branch
order by largest_revenue;


-- -------------------------------------------------------
--   What product line had the largest VAT?

select  product_line ,avg(vat) largest_vat
from sales 
group by product_line
order by largest_vat;

-- --------------------------------------------------------
 -- Fetch each product line and add a column to those product 
-- line showing "Good", "Bad". Good if its greater than average sales

select avg(quantity) as qty from sales;

select product_line,
case  when  avg(quantity)>6 then "Good"
ELSE "Bad"
END as remark
from sales
group by product_line;

-- -- Which branch sold more products than average product sold?

select branch , sum(quantity) as qty 
from sales
group by branch
having sum(quantity) > avg(quantity) ;

-- --------------------------------------------------------------------------
--  What is the most common product line by gender


select gender, product_line, count(gender) as total_count
from sales
group by gender,product_line
order by total_count desc;


-- 
-- What is the average rating of each product line

select	product_line, round(avg(rating),2)as rating_level from sales
group by product_line
order by rating_level;

-- --------------------------------------------------------------------
-- -------------------------- Customers -------------------------------
-- --------------------------------------------------------------------

--  How many unique customer types does the data have?

select distinct customer_type from sales;

-- How many unique payment methods does the data have?
SELECT
	DISTINCT payment
FROM sales;

-- -----------------------------------------------------------
